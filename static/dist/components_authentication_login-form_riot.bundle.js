"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["components_authentication_login-form_riot"],{

/***/ "./components/authentication/login-form.riot":
/*!***************************************************!*\
  !*** ./components/authentication/login-form.riot ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _components_common_input_field_riot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @components/common/input-field.riot */ \"./components/common/input-field.riot\");\n/* harmony import */ var _components_common_app_button_riot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/common/app-button.riot */ \"./components/common/app-button.riot\");\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! validator */ \"./node_modules/validator/index.js\");\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(validator__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  css: `login-form #loginErrorBox,[is=\"login-form\"] #loginErrorBox{text-align: center;}`,\r\n\r\n  exports: {\r\n    components: {\r\n      InputField: _components_common_input_field_riot__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n      AppButton: _components_common_app_button_riot__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n    },\r\n\r\n    async handleSubmit(e) {\r\n      e.preventDefault(); // Prevent default form submission\r\n\r\n      const email = this.$('form').elements['email'].value.trim();\r\n      const password = this.$('form').elements['password'].value.trim();\r\n      const submitBtn = this.$('#loginSubmitBtn');\r\n      const errorBox = this.$('#loginErrorBox');\r\n\r\n      console.log('Received details');\r\n\r\n      // Disable button and show loader\r\n      submitBtn.disabled = true;\r\n      submitBtn.innerHTML = '<div class=\"lds-dual-ring\"></div>';\r\n\r\n      // Validate form fields\r\n      if (!validator__WEBPACK_IMPORTED_MODULE_2___default().isEmail(email)) {\r\n        errorBox.innerHTML = 'Invalid email address';\r\n        submitBtn.disabled = false;\r\n        submitBtn.innerHTML = 'Sign In';\r\n        return;\r\n      }\r\n\r\n      if (validator__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(password)) {\r\n        errorBox.innerHTML = 'Password is required';\r\n        submitBtn.disabled = false;\r\n        submitBtn.innerHTML = 'Sign In';\r\n        return;\r\n      }\r\n\r\n      // Send POST request to Flask backend\r\n      try {\r\n        const response = await fetch('/auth/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n\r\n        if (response.ok) {\r\n          // Redirect to dashboard on success\r\n          window.location.href = '/dashboard';\r\n        } else {\r\n          // Handle login failure (e.g., invalid credentials)\r\n          const data = await response.json();\r\n          errorBox.innerHTML = data.message || 'Login failed';\r\n          submitBtn.disabled = false;\r\n          submitBtn.innerHTML = 'Sign In'; // Restore button text\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during login:', error);\r\n        errorBox.innerHTML = 'An error occurred. Please try again.';\r\n        submitBtn.disabled = false;\r\n        submitBtn.innerHTML = 'Sign In'; // Restore button text\r\n      }\r\n    },\r\n\r\n    onMounted() {\r\n      // TODO: add delayed masking\r\n      const form = this.$('#loginForm');\r\n      if (form) {\r\n        form.addEventListener('submit', this.handleSubmit); \r\n      }\r\n    }\r\n  },\r\n\r\n  template: (\r\n    template,\r\n    expressionTypes,\r\n    bindingTypes,\r\n    getComponent\r\n  ) => template(\r\n    '<div class=\" container Grid -middle -center\"><div class=\"card Cell -4of12\"><div class=\"card-header\"><h1>Welcome Back</h1><p>Don\\'t have an account? <a href=\"/auth/register\">Register</a></p></div><form id=\"loginForm\"><input-field expr5=\"expr5\" type=\"email\" placeholder=\"Email Address\" name=\"email\"></input-field><input-field expr6=\"expr6\" type=\"password\" placeholder=\"Password\" name=\"password\"></input-field><app-button expr7=\"expr7\" class=\"primary full-width\" type=\"submit\" id=\"loginSubmitBtn\"></app-button></form><div class=\"divider\">OR</div><app-button expr8=\"expr8\" class=\"secondary full-width\" type=\"button\" id=\"guestBtn\"></app-button><div class=\"alert-danger\" id=\"loginErrorBox\"></div></div></div>',\r\n    [\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'input-field',\r\n\r\n        slots: [\r\n          {\r\n            id: 'icon',\r\n            html: '<span slot=\"icon\">‚úâÔ∏è</span>',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr5',\r\n        selector: '[expr5]'\r\n      },\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'input-field',\r\n\r\n        slots: [\r\n          {\r\n            id: 'icon',\r\n            html: '<span slot=\"icon\">üîí</span>',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr6',\r\n        selector: '[expr6]'\r\n      },\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'app-button',\r\n\r\n        slots: [\r\n          {\r\n            id: 'default',\r\n            html: '\\n          Sign In\\n        ',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr7',\r\n        selector: '[expr7]'\r\n      },\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'app-button',\r\n\r\n        slots: [\r\n          {\r\n            id: 'default',\r\n            html: 'Sign In as Guest',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr8',\r\n        selector: '[expr8]'\r\n      }\r\n    ]\r\n  ),\r\n\r\n  name: 'login-form'\r\n});\n\n//# sourceURL=webpack:///./components/authentication/login-form.riot?");

/***/ }),

/***/ "./components/common/app-button.riot":
/*!*******************************************!*\
  !*** ./components/common/app-button.riot ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  css: null,\r\n\r\n  exports: {\r\n    props: {\r\n      class: \"secondary\",\r\n      type: \"button\",\r\n      id: \"\",\r\n    },\r\n\r\n    onMounted() {\r\n      // Strip props from the root element (if necessary)\r\n      Object.keys(this.props).forEach(attr => {\r\n        this.root.removeAttribute(attr);\r\n      });\r\n    }\r\n  },\r\n\r\n  template: (\r\n    template,\r\n    expressionTypes,\r\n    bindingTypes,\r\n    getComponent\r\n  ) => template(\r\n    '<button expr15=\"expr15\"><slot expr16=\"expr16\"></slot></button>',\r\n    [\r\n      {\r\n        redundantAttribute: 'expr15',\r\n        selector: '[expr15]',\r\n\r\n        expressions: [\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'class',\r\n            evaluate: _scope => _scope.props.class\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'type',\r\n            evaluate: _scope => _scope.props.type\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'id',\r\n            evaluate: _scope => _scope.props.id\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        type: bindingTypes.SLOT,\r\n        attributes: [],\r\n        name: 'default',\r\n        template: null,\r\n        redundantAttribute: 'expr16',\r\n        selector: '[expr16]'\r\n      }\r\n    ]\r\n  ),\r\n\r\n  name: 'app-button'\r\n});\n\n//# sourceURL=webpack:///./components/common/app-button.riot?");

/***/ }),

/***/ "./components/common/input-field.riot":
/*!********************************************!*\
  !*** ./components/common/input-field.riot ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  css: null,\r\n\r\n  exports: {\r\n    props: {\r\n      type: \"text\",\r\n      placeholder: \"Enter text\",\r\n      name: \"\",\r\n    },\r\n\r\n    onMounted() {\r\n      // Strip props from the root element (if necessary)\r\n      Object.keys(this.props).forEach(attr => {\r\n        this.root.removeAttribute(attr);\r\n      });\r\n    }\r\n  },\r\n\r\n  template: (\r\n    template,\r\n    expressionTypes,\r\n    bindingTypes,\r\n    getComponent\r\n  ) => template(\r\n    '<div class=\"input-group\"><div><slot expr13=\"expr13\" name=\"icon\"></slot></div><input expr14=\"expr14\"/></div>',\r\n    [\r\n      {\r\n        type: bindingTypes.SLOT,\r\n        attributes: [],\r\n        name: 'icon',\r\n        template: null,\r\n        redundantAttribute: 'expr13',\r\n        selector: '[expr13]'\r\n      },\r\n      {\r\n        redundantAttribute: 'expr14',\r\n        selector: '[expr14]',\r\n\r\n        expressions: [\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'type',\r\n            evaluate: _scope => _scope.props.type\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'placeholder',\r\n            evaluate: _scope => _scope.props.placeholder\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'name',\r\n            evaluate: _scope => _scope.props.name\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  ),\r\n\r\n  name: 'input-field'\r\n});\n\n//# sourceURL=webpack:///./components/common/input-field.riot?");

/***/ })

}]);