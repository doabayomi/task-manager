"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["components_authentication_register-form_riot"],{

/***/ "./components/authentication/register-form.riot":
/*!******************************************************!*\
  !*** ./components/authentication/register-form.riot ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _components_common_input_field_riot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @components/common/input-field.riot */ \"./components/common/input-field.riot\");\n/* harmony import */ var _components_common_app_button_riot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/common/app-button.riot */ \"./components/common/app-button.riot\");\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! validator */ \"./node_modules/validator/index.js\");\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(validator__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  css: null,\r\n\r\n  exports: {\r\n    components: {\r\n      InputField: _components_common_input_field_riot__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n      AppButton: _components_common_app_button_riot__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n    },\r\n\r\n    getFormValues() {\r\n      const form = this.$('form');\r\n      return {\r\n        email: form.elements['email'].value.trim(),\r\n        password: form.elements['password'].value.trim(),\r\n        confirmPassword: form.elements['confirm_password'].value.trim()\r\n      };\r\n    },\r\n\r\n    validateInputs(email, password, confirmPassword) {\r\n      if (!validator__WEBPACK_IMPORTED_MODULE_2___default().isEmail(email)) return 'Invalid email address';\r\n      if (validator__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(password)) return 'Password is required';\r\n      if (!validator__WEBPACK_IMPORTED_MODULE_2___default().isStrongPassword(password, { minLength: 6, minSymbols: 0 }))\r\n        return 'Password must be at least 6 characters long, include a digit, and an uppercase letter.';\r\n      if (!validator__WEBPACK_IMPORTED_MODULE_2___default().equals(password, confirmPassword)) return 'Passwords do not match.';\r\n      return null; // No errors\r\n    },\r\n\r\n    async handleSubmit(e) {\r\n      e.preventDefault();\r\n\r\n      const { email, password, confirmPassword } = this.getFormValues();\r\n      const submitBtn = this.$('#registerBtn');\r\n      const errorBox = this.$('#errorBox');\r\n      const emailErrorBox = this.$('#emailAlertBox');\r\n      const passwordErrorBox = this.$('#passwordAlertBox');\r\n\r\n      // Clear previous errors\r\n      errorBox.innerHTML = emailErrorBox.innerHTML = passwordErrorBox.innerHTML = '';\r\n\r\n      submitBtn.disabled = true;\r\n      submitBtn.innerHTML = '<div class=\"lds-dual-ring\"></div>';\r\n\r\n      const error = this.validateInputs(email, password, confirmPassword);\r\n      if (error) {\r\n        passwordErrorBox.innerHTML = error;\r\n        submitBtn.disabled = false;\r\n        submitBtn.innerHTML = 'Create an account';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('/auth/register', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, password })\r\n        });\r\n\r\n        if (response.ok) {\r\n          window.location.href = '/auth/login';\r\n        } else {\r\n          const data = await response.json();\r\n          errorBox.innerHTML = data.message || 'Sign up failed';\r\n        }\r\n      } catch (err) {\r\n        errorBox.innerHTML = 'An error occurred. Please try again.';\r\n      } finally {\r\n        submitBtn.disabled = false;\r\n        submitBtn.innerHTML = 'Create an account';\r\n      }\r\n    },\r\n\r\n    onMounted() {\r\n      const form = this.$('#registerForm');\r\n      if (form) {\r\n        form.addEventListener('submit', this.handleSubmit);\r\n      }\r\n    }\r\n  },\r\n\r\n  template: (\r\n    template,\r\n    expressionTypes,\r\n    bindingTypes,\r\n    getComponent\r\n  ) => template(\r\n    '<div class=\"container Grid -middle -center\"><div class=\"card Cell -4of12\"><div class=\"card-header\"><h1>Let\\'s get you started</h1><p>Already have an account? <a href=\"/login\">Login</a></p></div><form id=\"registerForm\"><input-field expr9=\"expr9\" type=\"email\" placeholder=\"Email Address\" name=\"email\"></input-field><div id=\"emailAlertBox\" class=\"alert-danger\"></div><input-field expr10=\"expr10\" type=\"password\" placeholder=\"Password\" name=\"password\"></input-field><input-field expr11=\"expr11\" type=\"password\" placeholder=\"Confirm Password\" name=\"confirm_password\"></input-field><div id=\"passwordAlertBox\" class=\"alert-danger\"></div><app-button expr12=\"expr12\" class=\"primary full-width\" type=\"submit\" id=\"registerBtn\"></app-button></form><div class=\"alert-danger\" id=\"errorBox\"></div></div></div>',\r\n    [\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'input-field',\r\n\r\n        slots: [\r\n          {\r\n            id: 'icon',\r\n            html: '<span slot=\"icon\">‚úâÔ∏è</span>',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr9',\r\n        selector: '[expr9]'\r\n      },\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'input-field',\r\n\r\n        slots: [\r\n          {\r\n            id: 'icon',\r\n            html: '<span slot=\"icon\">üîí</span>',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr10',\r\n        selector: '[expr10]'\r\n      },\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'input-field',\r\n\r\n        slots: [\r\n          {\r\n            id: 'icon',\r\n            html: '<span slot=\"icon\">üîí</span>',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr11',\r\n        selector: '[expr11]'\r\n      },\r\n      {\r\n        type: bindingTypes.TAG,\r\n        getComponent: getComponent,\r\n        evaluate: _scope => 'app-button',\r\n\r\n        slots: [\r\n          {\r\n            id: 'default',\r\n            html: '\\n          Create an account\\n        ',\r\n            bindings: []\r\n          }\r\n        ],\r\n\r\n        attributes: [],\r\n        redundantAttribute: 'expr12',\r\n        selector: '[expr12]'\r\n      }\r\n    ]\r\n  ),\r\n\r\n  name: 'register-form'\r\n});\n\n//# sourceURL=webpack:///./components/authentication/register-form.riot?");

/***/ }),

/***/ "./components/common/app-button.riot":
/*!*******************************************!*\
  !*** ./components/common/app-button.riot ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  css: null,\r\n\r\n  exports: {\r\n    props: {\r\n      class: \"secondary\",\r\n      type: \"button\",\r\n      id: \"\",\r\n    },\r\n\r\n    onMounted() {\r\n      // Strip props from the root element (if necessary)\r\n      Object.keys(this.props).forEach(attr => {\r\n        this.root.removeAttribute(attr);\r\n      });\r\n    }\r\n  },\r\n\r\n  template: (\r\n    template,\r\n    expressionTypes,\r\n    bindingTypes,\r\n    getComponent\r\n  ) => template(\r\n    '<button expr15=\"expr15\"><slot expr16=\"expr16\"></slot></button>',\r\n    [\r\n      {\r\n        redundantAttribute: 'expr15',\r\n        selector: '[expr15]',\r\n\r\n        expressions: [\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'class',\r\n            evaluate: _scope => _scope.props.class\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'type',\r\n            evaluate: _scope => _scope.props.type\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'id',\r\n            evaluate: _scope => _scope.props.id\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        type: bindingTypes.SLOT,\r\n        attributes: [],\r\n        name: 'default',\r\n        template: null,\r\n        redundantAttribute: 'expr16',\r\n        selector: '[expr16]'\r\n      }\r\n    ]\r\n  ),\r\n\r\n  name: 'app-button'\r\n});\n\n//# sourceURL=webpack:///./components/common/app-button.riot?");

/***/ }),

/***/ "./components/common/input-field.riot":
/*!********************************************!*\
  !*** ./components/common/input-field.riot ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  css: null,\r\n\r\n  exports: {\r\n    props: {\r\n      type: \"text\",\r\n      placeholder: \"Enter text\",\r\n      name: \"\",\r\n    },\r\n\r\n    onMounted() {\r\n      // Strip props from the root element (if necessary)\r\n      Object.keys(this.props).forEach(attr => {\r\n        this.root.removeAttribute(attr);\r\n      });\r\n    }\r\n  },\r\n\r\n  template: (\r\n    template,\r\n    expressionTypes,\r\n    bindingTypes,\r\n    getComponent\r\n  ) => template(\r\n    '<div class=\"input-group\"><div><slot expr13=\"expr13\" name=\"icon\"></slot></div><input expr14=\"expr14\"/></div>',\r\n    [\r\n      {\r\n        type: bindingTypes.SLOT,\r\n        attributes: [],\r\n        name: 'icon',\r\n        template: null,\r\n        redundantAttribute: 'expr13',\r\n        selector: '[expr13]'\r\n      },\r\n      {\r\n        redundantAttribute: 'expr14',\r\n        selector: '[expr14]',\r\n\r\n        expressions: [\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'type',\r\n            evaluate: _scope => _scope.props.type\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'placeholder',\r\n            evaluate: _scope => _scope.props.placeholder\r\n          },\r\n          {\r\n            type: expressionTypes.ATTRIBUTE,\r\n            isBoolean: false,\r\n            name: 'name',\r\n            evaluate: _scope => _scope.props.name\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  ),\r\n\r\n  name: 'input-field'\r\n});\n\n//# sourceURL=webpack:///./components/common/input-field.riot?");

/***/ })

}]);